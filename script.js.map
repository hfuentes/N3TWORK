{"version":3,"file":"script.js","sourceRoot":"","sources":["script.ts"],"names":[],"mappings":"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","sourcesContent":["//spiral\nfunction printMatrix(m: Array<number>, n: number): Array<number> {\n    let matrix: Array<Array<number>> = []\n    let result: Array<any> = []\n    while (m.length) matrix.push(m.splice(0, n)) //add from n to n\n    while (matrix.length) {\n        result = [...result, ...matrix.map(line => line.shift())] // left side...down\n        if (matrix.length) {\n            let tmp: Array<number> = []\n            matrix.pop()?.forEach(i => tmp.push(i)) // bottom side...to the right\n            result = [...result, ...tmp]\n        }\n        if (matrix.length) result = [...result, ...matrix.map(line => line.pop()).reverse()] //left side...upwards\n        if (matrix.length) {\n            let tmp: Array<any> = []\n            matrix.shift()?.forEach(i => tmp.push(i)) //top side...to the left\n            result = [...result, ...tmp.reverse()]\n        }\n        //...and repeats in the sub square\n    }\n    return result\n}\n\n//prime numbers\nfunction printNPrimes(n: number): Array<number> {\n    let result: Array<number> = [2] // 2 is always prime :)\n    let val: number = result[result.length - 1] + 1 // last + 1\n    let verify = true // typing like boolean is not necessary\n    while (result.length < n) {\n        verify = true\n        result.some(i => {\n            if (val % i === 0) { // optimized to divide only by prime numbers found\n                verify = false\n                return true\n            }\n        }) // fermat method\n        if (verify) result.push(val)\n        val++\n    }\n    return result\n}\n\n//findCircleCollisions\nfunction findCircleCollisions(circles: Array<Circle> = []): Array<CirclesCollision> {\n    let collisions: Array<CirclesCollision> = []\n    for (let i = 0; i < circles.length - 1; i++) {\n        for (let j = i + 1; j < circles.length; j++) {\n            console.log('i=' + i + ', j=' + j)\n            collisions.push(new CirclesCollision(circles[i], circles[j]))\n        }\n    }\n    return collisions\n}\n\nfunction collision(c1: Circle, c2: Circle) {\n    // return (c1.r + c2.r) > Math.sqrt(c1.x * c2.x + c1.y * c2.y) // optimized removing sqrt\n    return ((c1.r + c2.r) ** 2) > (c1.x * c2.x + c1.y * c2.y) // distance between centers and sum of radios\n}\n\nclass CirclesCollision {\n    c1: Circle\n    c2: Circle\n    collision: boolean\n    constructor(c1: Circle, c2: Circle) {\n        this.c1 = c1\n        this.c2 = c2\n        this.collision = collision(c1, c2)\n    }\n}\n\nclass Circle {\n    x: number // x position\n    y: number // y position\n    r: number // radio\n    constructor(x: number, y: number, r: number) {\n        this.x = x\n        this.y = y\n        this.r = Math.abs(r)\n    }\n}\n\nfunction calculateSpiral() {\n    const spiralInputMEl = <HTMLInputElement>document.getElementById('spiral-input-m')\n    const spiralInputNEl = <HTMLInputElement>document.getElementById('spiral-input-n')\n\n    const spiralResult = printMatrix(JSON.parse(spiralInputMEl.value), JSON.parse(spiralInputNEl.value))\n\n    const spiralResultEl = document.getElementById('spiral-result')\n    if (spiralResultEl) spiralResultEl.innerText = JSON.stringify(spiralResult)\n}\n\nfunction calculatePrime() {\n\n    const primeInputEl = <HTMLInputElement>document.getElementById('prime-input')\n\n    const primeResult = printNPrimes(JSON.parse(primeInputEl.value))\n\n    const primeResultEl = document.getElementById('prime-result')\n    if (primeResultEl) primeResultEl.innerText = JSON.stringify(primeResult)\n\n}\n\nfunction calculateCollisions() {\n\n    const circlesInputEl = <HTMLInputElement>document.getElementById('circles-input')\n\n    const collisions = findCircleCollisions(<Array<Circle>>JSON.parse(circlesInputEl.value))\n\n    let text = ''\n    collisions.forEach((c, i) => {\n        text += '<p>' + (i + 1) + ') ' +\n            'c1: ' + JSON.stringify(c.c1).replace('\"', '') + ' - ' +\n            'c2: ' + JSON.stringify(c.c2).replace('\"', '') + ' - ' +\n            'collision: ' + c.collision + '</p>'\n    });\n    const circlesResultEl = document.getElementById('circles-result')\n    if (circlesResultEl) circlesResultEl.innerHTML = text\n}\n\nwindow.onload = () => {\n\n    //spiral\n\n    let m: Array<number> = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n    let n: number = 4\n\n    const spiralInputMEl = <HTMLInputElement>document.getElementById('spiral-input-m')\n    if (spiralInputMEl) spiralInputMEl.value = JSON.stringify(m)\n    const spiralInputNEl = <HTMLInputElement>document.getElementById('spiral-input-n')\n    if (spiralInputNEl) spiralInputNEl.value = JSON.stringify(n)\n\n    const spiralResult = printMatrix(m, n)\n\n    const spiralResultEl = document.getElementById('spiral-result')\n    if (spiralResultEl) spiralResultEl.innerText = JSON.stringify(spiralResult)\n\n    //primes\n    const p: number = 30\n\n    const primeInputEl = <HTMLInputElement>document.getElementById('prime-input')\n    if (primeInputEl) primeInputEl.value = JSON.stringify(p)\n\n    const primeResult = printNPrimes(30)\n\n    const primeResultEl = document.getElementById('prime-result')\n    if (primeResultEl) primeResultEl.innerText = JSON.stringify(primeResult)\n\n    //circles\n    const cs: Array<Circle> = [\n        { x: 400, y: 15, r: 400 },\n        { x: 13, y: 140, r: 300 }]\n\n    const circlesInputEl = <HTMLInputElement>document.getElementById('circles-input')\n    if (circlesInputEl) circlesInputEl.value = JSON.stringify(cs)\n\n    const collisions = findCircleCollisions(cs)\n\n    let text = ''\n    collisions.forEach((c, i) => {\n        text += '<p>' + (i + 1) + ') ' +\n            'c1: ' + JSON.stringify(c.c1).replace('\"', '') + ' - ' +\n            'c2: ' + JSON.stringify(c.c2).replace('\"', '') + ' - ' +\n            'collision: ' + c.collision + '</p>'\n    });\n    const circlesResultEl = document.getElementById('circles-result')\n    if (circlesResultEl) circlesResultEl.innerHTML = text\n\n}"]}